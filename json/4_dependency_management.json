{
    "Dependency Management": {
        "Instancing methods": {
            "Get.put() | Singleton": {
                "dependency": "any Class",
                "tag": "String?",
                "permanent": "bool, default = false"
            },
            "Get.lazyPut() | Lazy create instances when needed": {
                "dependency": "any Class",
                "tag": "String?",
                "fenix": "bool, default = false"
            },
            "Get.putAsync()": {
                "builder": "Future<any Class> Function()",
                "tag": "String?",
                "permanent": "bool, default = false"
            },
            "Get.create() | better to use together with GetWidget": {
                "builder": "any Class Function()",
                "tag": "String?",
                "permanent": "bool default = true"
            },
            "Get.delete()": ""
        },
        "Find controller": {
            "final controller": "Get.find<Controller>()",
            "Controller controller": "Get.find()"
        },
        "Alternate controller": {
            "Get.replace()": "",
            "Get.lazyReplace()": ""
        },
        "Binding | Extends Bindings class": {
            "void Dependency(){}": "@override",
            "Named route": {
                "getPages": {
                    "BindingsBuilder() | Bindings": {
                        "void Function()": ""
                    }
                }
            },
            "Normal router": "",
            "initialBinding": ""
        },
        "SmartManagement": {
            "âœ° full": "Dispose classes that are not being used and were not set to be permanent",
            "onlyBuilder": "No permission to dispose classes that are using Get.put & Get.putAsync",
            "keepFactory": "Save in factory, will recreate the dependency when it need again"
        }
    }
}